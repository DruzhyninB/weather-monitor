{"version":3,"sources":["config/api.url.js","config/settings.js","api/forecast.js","utl/index.js","components/Form/Form.jsx","store/actions/form.actions.js","store/reducers/form.reducers.js","store/reducers/index.js","store/store.js","components/Loader/Loader.jsx","components/Graph/Graph.jsx","components/Header/Header.jsx","App.jsx","index.js"],"names":["forecast","concat","settings","openWeatherKey","getForecast","id","axios","get","URL","params","appid","units","timeOut","SET_NAME","SET_DATA","SET_LOADING","SET_ERROR","SET_FILTERING","loadCity","dispatch","getState","setLoadingData","then","res","setData","data","list","map","element","date","Date","dt_txt","value","main","temp","setDisplayName","city","name","catch","err","errorHandler","type","payload","state","setFilteringData","toastr","error","message","initialState","loading","filtering","form","arguments","length","undefined","action","Actions","Object","objectSpread","rootReducer","combineReducers","toastrReducer","store","createStore","applyMiddleware","thunk","Loader","props","isloading","react_default","a","createElement","className","cityList","window","Form","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClickCity","handleChange","e","persist","setState","defineProperty","target","clearTimeout","setTimeout","filterWorker","postMessage","filter","workerResponse","listData","result","renderRow","_ref","key","index","style","title","country","onClick","_this2","Worker","onmessage","_this3","placeholder","onChange","classNames","dist_es","_ref2","height","width","rowCount","rowHeight","rowRenderer","components_Loader_Loader","React","Component","connect","_ref3","bindActionCreators","am4core","am4themes_animated","Graph","oldProps","_","isEqual","chart","generate","am4charts","paddingLeft","dateAxis","xAxes","push","renderer","minGridDistance","baseInterval","timeUnit","count","dateFormats","setKey","valueAxis","yAxes","tooltip","disabled","minWidth","series","dataFields","dateX","valueY","tooltipText","cursor","scrollbarX","dispose","Header","App","components_Form_Form","components_Header_Header","components_Graph_Graph","ReactDOM","render","es","src_App_0","lib_default","newestOnTop","position","transitionIn","transitionOut","closeOnToastrClick","document","getElementById"],"mappings":"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","file":"static/js/main.7bd7be50.chunk.js","sourcesContent":["const API_BASE = 'https://api.openweathermap.org/data/2.5';\r\n\r\nconst forecast = `${API_BASE}/forecast`\r\n\r\nexport {\r\n    forecast\r\n}","export default {\r\n    openWeatherKey :'a6406e2d8df17080c159e36896fa1e1a'\r\n}","import axios from \"axios\";\r\nimport {settings, URL} from 'config';\r\n\r\nexport function getForecast(id) {\r\n    return axios.get(URL.forecast, {\r\n        params: {\r\n            id: id,\r\n            appid: settings.openWeatherKey,\r\n            units: 'metric'\r\n        }\r\n    })\r\n}","export const formatData = (array) => {\r\n    return array.map(element => {\r\n        return {\r\n            date: new Date(element.dt_txt),\r\n            value: element.main.temp\r\n        }\r\n    })\r\n}","import React from 'react';\nimport {AutoSizer, List} from 'react-virtualized';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport 'react-virtualized/styles.css';\nimport {Actions} from 'store';\nimport classNames from 'classnames';\n\nimport Loader from 'components/Loader/Loader';\nimport './Form.css';\nconst cityList = window.cityList;\n\nlet timeOut;\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      listData: [],\n    };\n  }\n\n  componentDidMount() {\n    this.setState({listData: cityList, filterWorker: new Worker('webWorker.js')}, () => {\n      this.state.filterWorker.onmessage = this.workerResponse;\n    })\n  }\n\n  onClickCity = (city) => {\n    if (!this.props.loading) {\n      this.props.loadCity(city.id);\n    }\n  }\n\n  handleChange = (e) => {\n    e.persist();\n    let {filtering} = this.props;\n    if (!filtering) {\n      this.setState({[e.target.name]: e.target.value});\n      if (timeOut) {\n        clearTimeout(timeOut);\n      }\n      timeOut = setTimeout(() => {\n        this.props.setFilteringData(true);\n        this.state.filterWorker.postMessage({list: cityList, filter: e.target.value});\n        clearTimeout(timeOut);\n      }, 500);\n    }\n  }\n\n  workerResponse = (e) => {\n    this.setState({listData: e.data.result});\n    this.props.setFilteringData(false);\n  }\n\n  renderRow = ({key, index, style}) => {\n    let city = this.state.listData[index];\n    return (\n      <div className=\"wm-list-item\" title={`${city.name} - ${city.country}`} onClick={() => this.onClickCity(city)} key={key} style={style}>\n        {`${city.name} - ${city.country}`}\n      </div>\n    )\n  }\n\n  render() {\n    let {listData} = this.state;\n    let {filtering} = this.props;\n    return (\n      <div className=\"wm-form\">\n        <div className=\"wm-form-search\">\n            <input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Enter a city\"\n              value={this.state.name}\n              onChange={this.handleChange}\n            />\n        </div>\n        <div className={classNames(\"wm-form-list\", {'loading': filtering})}>\n          <AutoSizer>\n            {({height, width}) => (\n              <List\n                width={width}\n                height={height}\n                rowCount={listData.length}\n                rowHeight={30}\n                rowRenderer={this.renderRow}\n              />\n            )}\n          </AutoSizer>\n          <Loader isloading={filtering} />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    loadCity: Actions.loadCity,\n    setDisplayName: Actions.setDisplayName,\n    setData: Actions.setData,\n    setLoadingData: Actions.setLoadingData,\n    setFilteringData: Actions.setFilteringData\n  }, dispatch);\n}\n\nfunction mapStateToProps({form}) {\n  return {\n    loading: form.loading,\n    filtering: form.filtering\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import {forecast} from 'api';\r\nimport * as util from 'utl';\r\nimport {toastr} from 'ultumus-react-redux-toastr'\r\n\r\nexport const SET_NAME = 'SET_NAME';\r\nexport const SET_DATA = 'SET_DATA';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const SET_ERROR = 'SET_ERROR';\r\nexport const SET_FILTERING = 'SET_FILTERING';\r\n\r\n\r\nexport const loadCity = id => {\r\n    return (dispatch, getState) => {\r\n        dispatch(setLoadingData(true));\r\n        forecast.getForecast(id)\r\n            .then(res => {\r\n                dispatch(setData(util.formatData(res.data.list)));\r\n                dispatch(setDisplayName(res.data.city.name));\r\n                dispatch(setLoadingData(false));\r\n\r\n            }).catch(err=>dispatch(errorHandler(err)));\r\n    }\r\n}\r\n\r\nexport const setDisplayName = name => {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_NAME,\r\n            payload: name,\r\n        })\r\n    }\r\n}\r\n\r\nexport const setData = data => {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_DATA,\r\n            payload: data,\r\n        })\r\n    }\r\n}\r\n\r\nexport const setLoadingData = state => {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_LOADING,\r\n            payload: state,\r\n        })\r\n    }\r\n}\r\n\r\nexport const setFilteringData = state => {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_FILTERING,\r\n            payload: state,\r\n        })\r\n    }\r\n}\r\n\r\nconst errorHandler = err => {\r\n    return (dispatch, getState) => {\r\n        dispatch(setLoadingData(false));\r\n        toastr.error('Error!', err.message)\r\n    }\r\n}","import * as Actions from 'store/actions';\r\nconst initialState = {\r\n  name: '',\r\n  data:[],\r\n  loading:false,\r\n  filtering:false\r\n}\r\n\r\nconst form = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case Actions.SET_NAME: {\r\n      return {\r\n        ...state,\r\n        name: action.payload,\r\n      };\r\n    }\r\n\r\n    case Actions.SET_DATA: {\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n      };\r\n    }\r\n\r\n    case Actions.SET_LOADING: {\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n    }\r\n\r\n    case Actions.SET_FILTERING: {\r\n      return {\r\n        ...state,\r\n        filtering: action.payload,\r\n      };\r\n    }\r\n\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default form;\r\n","import {combineReducers} from 'redux';\r\nimport {reducer as toastrReducer} from 'ultumus-react-redux-toastr'\r\n\r\nimport form from './form.reducers';\r\n\r\nconst rootReducer = combineReducers({\r\n    form,\r\n    toastr:toastrReducer\r\n});\r\n\r\nexport default rootReducer;","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {rootReducer} from 'store'\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport './Loader.css';\r\n\r\nexport const Loader = (props)=>{\r\n    let {isloading} = props;\r\n    return isloading? (\r\n        <div className=\"wm-loader\">\r\n            <div className=\"lds-css\">\r\n                <div className=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n            </div>\r\n        </div>\r\n    ):null;\r\n}\r\n\r\nexport default Loader;\r\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport classNames from 'classnames';\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport _ from 'underscore';\nimport './Graph.css';\n\nam4core.useTheme(am4themes_animated);\n\nclass Graph extends React.Component {\n\n  componentDidUpdate(oldProps) {\n    if (!_.isEqual(oldProps.data, this.props.data)) {\n      this.chart.data = this.props.data;\n    }\n  }\n\n  componentDidMount() {\n    this.generate();\n  }\n\n  generate() {\n    let chart = am4core.create(\"amChart\", am4charts.XYChart);\n    chart.paddingLeft = 0\n    chart.paddingLeft = 0\n\n    let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n    // Set date label formatting\n    dateAxis.renderer.minGridDistance = 120;\n    dateAxis.baseInterval = {timeUnit: \"hour\", count: 3}\n    dateAxis.dateFormats.setKey(\"hour\", \"MMMM dd HH:mm\");\n\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    valueAxis.tooltip.disabled = true;\n    valueAxis.renderer.minWidth = 35;\n\n    let series = chart.series.push(new am4charts.LineSeries());\n    series.dataFields.dateX = \"date\";\n    series.dataFields.valueY = \"value\";\n\n    series.tooltipText = \"{valueY.value} °C\";\n    chart.cursor = new am4charts.XYCursor();\n\n    let scrollbarX = new am4charts.XYChartScrollbar();\n    scrollbarX.series.push(series);\n    chart.scrollbarX = scrollbarX;\n    chart.data = this.props.data;\n    this.chart = chart;\n  }\n  componentWillUnmount() {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"wm-graph\">\n        <div className={classNames('wm-graph-wrapper')}>\n          <div id=\"amChart\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nfunction mapStateToProps({form}) {\n  return ({\n    data: form.data\n  });\n}\n\nexport default connect(mapStateToProps)(Graph);\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport './Header.css';\r\n\r\nclass Header extends React.Component {\r\n  \r\n  render() {\r\n    let {name} = this.props;\r\n    return (\r\n      <div className=\"wm-header\">\r\n        <p>\r\n          {name}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({form}) {\r\n  return ({\r\n    name: form.name,\r\n  });\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport classNames from 'classnames';\r\n\r\nimport Form from 'components/Form/Form';\r\nimport Graph from 'components/Graph/Graph';\r\nimport Header from 'components/Header/Header';\r\nimport Loader from 'components/Loader/Loader';\r\n\r\nimport './App.css'\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    let {loading} = this.props;\r\n    return (\r\n      <div className=\"wm-wrapper\">\r\n        <div className=\"wm-sidebar\">\r\n          <Form />\r\n        </div>\r\n        <div className={classNames(\"wm-content\", {'loading': loading})}>\r\n          <Header />\r\n          <Graph />\r\n          <Loader isloading={loading} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps({form}) {\r\n  return ({\r\n    loading: form.loading\r\n  });\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport ReduxToastr from 'ultumus-react-redux-toastr';\nimport 'ultumus-react-redux-toastr/lib/css/react-redux-toastr.min.css';\n\nimport {store} from 'store';\n\nimport App from './App';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n        <ReduxToastr\n            timeOut={4000}\n            newestOnTop={false}\n            position=\"bottom-right\"\n            transitionIn=\"fadeIn\"\n            transitionOut=\"fadeOut\"\n            closeOnToastrClick\n        />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}